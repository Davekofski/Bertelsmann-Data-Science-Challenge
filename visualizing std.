#this code was used to reply on: https://discussions.udacity.com/t/sample-standard-deviation-formula/695497 with Jupyter Notebook
#create many random samples from the standard normal distribution and see how the std. deviation behaves for different sample size


#first do the necessary imports

import numpy as np
import random
import matplotlib.pyplot as plt

#and for Jupyter Notebook
%matplotlib inline



#range specifies the number of samples you want to draw. in this example we draw a sample for each number from 2 to 100

sample_size=range(2,100)
sample=[]
std_corr=[]
std=[]
pop_std=[]

for a in sample_size:
    for i in range(a):
        sample.append(np.random.randn())
    
    std.append(np.std(sample))
    std_corr.append((np.std(sample, ddof=1)))
    pop_std.append(1)
    
    
#now we need to visualize the draws in a graph  
plt.figure(figsize=(10,8))
plt.plot( sample_size, std, marker='', markerfacecolor='blue', markersize=12, color='skyblue', linewidth=4, label="std.")
plt.plot( sample_size, std_corr, marker='', color='olive', linewidth=2,label="corr.std.")
plt.plot( sample_size, pop_std, marker='', color='red', linewidth=1, linestyle='dashed', label="pop.std.")
plt.legend()
plt.xlabel("draws")
plt.ylabel("deviation")
# you can also save the graph to your computer with plt.savefig('std.png'). std.png specifies the file name and type
plt.show()
